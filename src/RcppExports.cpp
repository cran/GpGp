// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// matern_isotropic
NumericMatrix matern_isotropic(NumericVector covparms, NumericMatrix locs);
RcppExport SEXP _GpGp_matern_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_sphere
NumericMatrix matern_sphere(NumericVector covparms, NumericMatrix lonlat);
RcppExport SEXP _GpGp_matern_sphere(SEXP covparmsSEXP, SEXP lonlatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lonlat(lonlatSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_sphere(covparms, lonlat));
    return rcpp_result_gen;
END_RCPP
}
// matern_space_time
NumericMatrix matern_space_time(NumericVector covparms, NumericMatrix locstime);
RcppExport SEXP _GpGp_matern_space_time(SEXP covparmsSEXP, SEXP locstimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locstime(locstimeSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_space_time(covparms, locstime));
    return rcpp_result_gen;
END_RCPP
}
// matern_sphere_time
NumericMatrix matern_sphere_time(NumericVector covparms, NumericMatrix lonlattime);
RcppExport SEXP _GpGp_matern_sphere_time(SEXP covparmsSEXP, SEXP lonlattimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lonlattime(lonlattimeSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_sphere_time(covparms, lonlattime));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_loglik_grouped
NumericVector vecchia_loglik_grouped(NumericVector covparms, StringVector covfun_name, NumericVector y, NumericMatrix locs, List NNlist);
RcppExport SEXP _GpGp_vecchia_loglik_grouped(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP ySEXP, SEXP locsSEXP, SEXP NNlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< List >::type NNlist(NNlistSEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_loglik_grouped(covparms, covfun_name, y, locs, NNlist));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_Linv_grouped
NumericVector vecchia_Linv_grouped(NumericVector covparms, StringVector covfun_name, NumericMatrix locs, List NNlist);
RcppExport SEXP _GpGp_vecchia_Linv_grouped(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP locsSEXP, SEXP NNlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< List >::type NNlist(NNlistSEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_Linv_grouped(covparms, covfun_name, locs, NNlist));
    return rcpp_result_gen;
END_RCPP
}
// Linv_mult_grouped
NumericVector Linv_mult_grouped(NumericVector Linv, NumericVector z, List NNlist);
RcppExport SEXP _GpGp_Linv_mult_grouped(SEXP LinvSEXP, SEXP zSEXP, SEXP NNlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Linv(LinvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< List >::type NNlist(NNlistSEXP);
    rcpp_result_gen = Rcpp::wrap(Linv_mult_grouped(Linv, z, NNlist));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_loglik
NumericVector vecchia_loglik(NumericVector covparms, StringVector covfun_name, NumericVector y, const NumericMatrix locs, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_vecchia_loglik(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP ySEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_loglik(covparms, covfun_name, y, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_Linv
NumericMatrix vecchia_Linv(NumericVector covparms, StringVector covfun_name, NumericMatrix locs, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_vecchia_Linv(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_Linv(covparms, covfun_name, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// Linv_mult
NumericVector Linv_mult(NumericMatrix Linv, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_Linv_mult(SEXP LinvSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Linv(LinvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(Linv_mult(Linv, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// L_mult
NumericVector L_mult(NumericMatrix Linv, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_L_mult(SEXP LinvSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Linv(LinvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(L_mult(Linv, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GpGp_matern_isotropic", (DL_FUNC) &_GpGp_matern_isotropic, 2},
    {"_GpGp_matern_sphere", (DL_FUNC) &_GpGp_matern_sphere, 2},
    {"_GpGp_matern_space_time", (DL_FUNC) &_GpGp_matern_space_time, 2},
    {"_GpGp_matern_sphere_time", (DL_FUNC) &_GpGp_matern_sphere_time, 2},
    {"_GpGp_vecchia_loglik_grouped", (DL_FUNC) &_GpGp_vecchia_loglik_grouped, 5},
    {"_GpGp_vecchia_Linv_grouped", (DL_FUNC) &_GpGp_vecchia_Linv_grouped, 4},
    {"_GpGp_Linv_mult_grouped", (DL_FUNC) &_GpGp_Linv_mult_grouped, 3},
    {"_GpGp_vecchia_loglik", (DL_FUNC) &_GpGp_vecchia_loglik, 5},
    {"_GpGp_vecchia_Linv", (DL_FUNC) &_GpGp_vecchia_Linv, 4},
    {"_GpGp_Linv_mult", (DL_FUNC) &_GpGp_Linv_mult, 3},
    {"_GpGp_L_mult", (DL_FUNC) &_GpGp_L_mult, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_GpGp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
